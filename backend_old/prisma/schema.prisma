generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employees {
  employeeId                      Int                              @id @default(autoincrement()) @db.UnsignedInt
  employee_FirstName              String                           @db.VarChar(100)
  employee_LastName               String                           @db.VarChar(100)
  employee_Address                String                           @db.Text
  employee_PhoneNumber            String                           @db.VarChar(20)
  employee_HireDate               DateTime                         @db.Date
  employee_Gender                 employees_employee_Gender
  employee_Position               String                           @db.VarChar(100)
  employee_Department             String                           @db.VarChar(100)
  employee_Salary                 Decimal                          @db.Decimal(10, 2)
  employee_CivilStatus            employees_employee_CivilStatus
  employee_Status                 employees_employee_Status
  employee_ShiftSchedule          employees_employee_ShiftSchedule
  employee_TIN                    String                           @db.Text
  employee_SSSNumber              String                            @unique(map: "employee_SSSNumber") @db.VarChar(20)
  employee_PhilhealthNumber       String                            @unique(map: "employee_PhilhealthNumber") @db.VarChar(100)
  employee_emergencyContactName   String                           @db.Text
  employee_emergencyContactNumber String                           @db.Text
  employee_imageURL               String                           @db.VarChar(255)
  attendances                     employees_attendance[]
  leaveRequests                   employee_request[]
  password                    String             @db.VarChar(255)
  mustChangePassword          Boolean            @default(true)
}

enum employees_employee_Gender {
  Male
  Female
  Other
}

enum employees_employee_CivilStatus {
  Single
  Married
  Divorced
}

enum employees_employee_Status {
  Active
  Inactive
  On_Leave       @map("On Leave")
  Suspended
  Terminated
  Resigned
  Retired
  Probation
  Contract_Ended @map("Contract Ended")
}

enum employees_employee_ShiftSchedule {
  DayShift
  MidNight
  NightShift
}


model employees_attendance {
  attendance_id   Int                               @id @default(autoincrement()) @db.UnsignedInt
  shiftSchedule   employees_employee_ShiftSchedule
  employeeId      Int                               @db.UnsignedInt
  clockIn         DateTime                         @db.DateTime
  clockOut        DateTime                         @db.DateTime
  employee        employees                        @relation(fields: [employeeId], references: [employeeId])
}



model employee_request {
  leaverequest_id     Int                      @id @default(autoincrement()) @db.UnsignedInt
  leaverequest_reason String                   @db.VarChar(100)
  leaverequest_status employee_request_status
  leave               employee_request_leave
  employeeId          Int                      @db.UnsignedInt
  employee            employees                @relation(fields: [employeeId], references: [employeeId])
  createdAt           DateTime                 @default(now())
  updatedAt           DateTime                 @updatedAt
}

enum employee_request_leave {
        Vacation
        Sick
        Parental
        Family_Medical
        Unpaid
        Personal
        Public_Holiday
        Religious_Observance
        Sabbatical
        Bereavement
        Compensatory
        Military
        Jury_Duty
        Garden
        Election
        Study
        Adverse_Weather
        Volunteer
        Domestic_Violence
        Disability
}

enum employee_request_status {
    Pending
    Approved
    Rejected
}


model hr_employee {
  hrId         Int                               @id @default(autoincrement()) @db.UnsignedInt
  humanresources_firstname    String             @db.VarChar(20)
  humanresources_lastname     String             @db.VarChar(20)
  employee_Gender             hr_employee_employee_Gender
  hr_position                 hr_employee_position
  leave                       hr_employee_request_leave
  leaverequest_reason         String             @db.VarChar(100)
  leaverequest_status         hr_employee_request_status
  password                    String             @db.VarChar(255)
  hr_employee_imageURL        String             @db.VarChar(255)
}

enum hr_employee_employee_Gender {
  Male
  Female
  Other
}

enum hr_employee_position {
  Intern
  INTERN
  HR_ASSISTANT
  HR_COORDINATOR
  RECRUITER
  HR_SPECIALIST
  HR_GENERALIST
  HR_OFFICER
  HR_ANALYST
  HR_BUSINESS_PARTNER
  HR_SUPERVISOR
  HR_MANAGER
  TALENT_ACQUISITION_MANAGER
  COMPENSATION_AND_BENEFITS_MANAGER
  TRAINING_AND_DEVELOPMENT_MANAGER
  HR_DIRECTOR
  VP_OF_HUMAN_RESOURCES
  CHIEF_HUMAN_RESOURCES_OFFICER
}

enum hr_employee_request_leave {
        Vacation
        Sick
        Parental
        Family_Medical
        Unpaid
        Personal
        Public_Holiday
        Religious_Observance
        Sabbatical
        Bereavement
        Compensatory
        Military
        Jury_Duty
        Garden
        Election
        Study
        Adverse_Weather
        Volunteer
        Domestic_Violence
        Disability
}

enum hr_employee_request_status {
    Pending
    Approved
    Rejected
}


// model job_posting {
//  hrId Int 

// }